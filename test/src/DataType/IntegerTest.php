<?php

namespace Feeld\DataType;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-24 at 16:35:41.
 */
class IntegerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Integer
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Integer;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Feeld\DataType\Integer::getSanitizer
     * @todo   Implement testGetSanitizer().
     */
    public function testGetSanitizer() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::setSanitizer
     * @todo   Implement testSetSanitizer().
     */
    public function testSetSanitizer() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getLastSanitizedValue
     * @todo   Implement testGetLastSanitizedValue().
     */
    public function testGetLastSanitizedValue() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::addValidator
     * @todo   Implement testAddValidator().
     */
    public function testAddValidator() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::addValidators
     * @todo   Implement testAddValidators().
     */
    public function testAddValidators() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getValidators
     * @todo   Implement testGetValidators().
     */
    public function testGetValidators() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::validateValue
     * @todo   Implement testValidateValue().
     */
    public function testValidateValue() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::setMinLength
     * @todo   Implement testSetMinLength().
     */
    public function testSetMinLength() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::setMaxLength
     * @todo   Implement testSetMaxLength().
     */
    public function testSetMaxLength() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getMinLength
     * @todo   Implement testGetMinLength().
     */
    public function testGetMinLength() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getMaxLength
     * @todo   Implement testGetMaxLength().
     */
    public function testGetMaxLength() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::hasMinLength
     * @todo   Implement testHasMinLength().
     */
    public function testHasMinLength() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::hasMaxLength
     * @todo   Implement testHasMaxLength().
     */
    public function testHasMaxLength() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::setMin
     * @todo   Implement testSetMin().
     */
    public function testSetMin() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::setMax
     * @todo   Implement testSetMax().
     */
    public function testSetMax() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getMin
     * @todo   Implement testGetMin().
     */
    public function testGetMin() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getMax
     * @todo   Implement testGetMax().
     */
    public function testGetMax() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::getStep
     * @todo   Implement testGetStep().
     */
    public function testGetStep() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::setStep
     * @todo   Implement testSetStep().
     */
    public function testSetStep() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::hasStep
     * @todo   Implement testHasStep().
     */
    public function testHasStep() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::hasMin
     * @todo   Implement testHasMin().
     */
    public function testHasMin() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Feeld\DataType\Integer::hasMax
     * @todo   Implement testHasMax().
     */
    public function testHasMax() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
